plugins {
    id "com.android.application"
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}

// Path to local QNN SDK.
// Download QNN SDK from https://qpm.qualcomm.com/#/main/tools/details/qualcomm_ai_engine_direct
def qnnSDKLocalPath="C:\\Qualcomm\\AIStack\\QAIRT\\2.32.6.250402"

// List of model assets
def models = ["llama3_2_3b"]
// Relative asset path for model configuration and binaries
def relAssetsPath = "src/main/assets/models/"
def buildDir = project(":ChatApp").getLayout().getBuildDirectory()
def libsDir = buildDir.dir("libs")

android {
    compileSdk Integer.valueOf(androidCompileSDK)

    defaultConfig {
        applicationId "com.quicinc.chatapp"

        // TODO: use androidMinSDK value from gradle.properties once it updates to 31
        minSdk Integer.valueOf(31)
        targetSdk Integer.valueOf(androidTargetSDK)
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17"
                abiFilters "arm64-v8a"
                arguments "-DQNN_SDK_ROOT_PATH=" + qnnSDKLocalPath
            }
        }
        sourceSets {
            main {
                jniLibs.srcDir libsDir
            }
        }
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.valueOf("VERSION_$javaSourceCompatibilityVersion")
        targetCompatibility JavaVersion.valueOf("VERSION_$javaTargetCompatibilityVersion")
    }

    namespace "com.quicinc.chatapp"
    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
            version "3.22.1"
        }
    }
    packagingOptions {
        // Extract native libraries so they"re accessible via the file system directly.
        jniLibs.useLegacyPackaging = true
    }
    aaptOptions {
        noCompress "bin", "json"
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

preBuild.doFirst {
    // Check if QNN SDK is set correctly
    if (!file(qnnSDKLocalPath).exists()) {
        throw new RuntimeException("QNN SDK does not exist at " + qnnSDKLocalPath + ". Please set `qnnSDKLocalPath` in build.gradle.");
    }

    // Copy required QNN libs
    if (!file(qnnSDKLocalPath + "/lib/aarch64-android/libGenie.so").exists()) {
        throw new RuntimeException("libGenie does not exist. Please set `qnnSDKLocalPath` in build.gradle.");
    }

    // Ensure genie-config and tokenizer is present
    models.each { model ->
        if (!file(relAssetsPath + model + "/genie_config.json").exists()) {
            throw new RuntimeException("Missing genie-config.json for " + model + ".")
        }
        if (!file(relAssetsPath + model + "/tokenizer.json").exists()) {
            throw new RuntimeException("Missing tokenizer.json for " + model + ".")
        }
    }
}



dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.google.android.material:material:1.12.0"
    implementation "androidx.constraintlayout:constraintlayout:2.2.0"

    //whisper
    implementation (project(":whisper"))
    implementation("com.google.mlkit:translate:17.0.2")
    // Mapbox Navigation SDK
    implementation"com.mapbox.navigationcore:android:3.9.0-rc.1"
    implementation"com.mapbox.navigationcore:copilot:3.9.0-rc.1"
    implementation"com.mapbox.navigationcore:ui-maps:3.9.0-rc.1"
    implementation"com.mapbox.navigationcore:voice:3.9.0-rc.1"
    implementation"com.mapbox.navigationcore:tripdata:3.9.0-rc.1"
    implementation"com.mapbox.navigationcore:ui-components:3.9.0-rc.1"

    // Mapbox Directions API - DirectionsCriteria 사용을 위해 추가
    implementation"com.mapbox.mapboxsdk:mapbox-sdk-services:7.2.0"

    // Mapbox Search SDK - 두 API 모두 지원
    implementation"com.mapbox.search:mapbox-search-android:2.12.0-beta.1" // Search Box API + Geocoding API 포함
    implementation"com.mapbox.search:place-autocomplete:2.12.0-beta.1"
    implementation"com.mapbox.search:mapbox-search-android-ui:2.12.0-beta.1"

    // Android UI Components
    implementation"androidx.constraintlayout:constraintlayout:2.2.1"
    implementation"androidx.recyclerview:recyclerview:1.3.2"
    implementation"androidx.cardview:cardview:1.0.0"
    implementation"com.google.android.material:material:1.11.0"
    implementation 'androidx.core:core-ktx:1.16.0'

    // Core Android dependencies
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.graphics)
    implementation(libs.androidx.ui.tooling.preview)
    implementation(libs.androidx.material3)

    // Test dependencies
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    androidTestImplementation(platform(libs.androidx.compose.bom))
    androidTestImplementation(libs.androidx.ui.test.junit4)
    debugImplementation(libs.androidx.ui.tooling)
    debugImplementation(libs.androidx.ui.test.manifest)
}

if (System.getProperty("user.dir") != project.rootDir.path) {
    throw new RuntimeException("This project should be opened from the `android` directory (parent of ChatApp directory), NOT the ChatApp directory.")
}
